import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.metrics import r2_score
import sklearn.metrics as metrics

df = pd.read_csv(r"C:\Users\sbhsb\OneDrive\Desktop\cinemaTicket_Ref.csv")

# Let's see the first 5 rows of the dataset
df.head()

# Let's see the last 5 rows of the dataset
df.tail()

df = df.drop('date', axis=1)

df

# Let's see the shape of the dataset
df.shape

# Let's see the columns of the dataset
df.columns

# Let's see the data types of the columns
df.dtypes

# let's check the missing values
df.isnull().sum()

# Let's drop the null values
df.dropna(inplace=True)

# Let's check for missing values again

print("The null values are dropped")
df.isnull().sum()

# Let's see the correlation between the columns
plt.figure(figsize=(15, 15))
sns.heatmap(df.corr(), annot=True)

#Assigning X values based on correlation with y
X = df[['ticket_price', 'occu_perc', 'show_time', 'tickets_sold','ticket_use','capacity']]
Y = df['total_sales']

#Splitting the data into training and testing
X_train,X_test,Y_train,Y_test = train_test_split(X,Y,train_size=0.7,random_state=42)

lr = LinearRegression()
lr.fit(X_train,Y_train)

#PREDICTING THE DATA
y_pred = lr.predict(X_test)

plt.figure(figsize=(12,6))
plt.scatter(Y_test,y_pred,color='b')
plt.show()

#Checking r2_score
r_squared = r2_score(Y_test, y_pred)
r_squared

#Let's check for other metrics too
print('MAE: {}'.format(metrics.mean_absolute_error(Y_test, y_pred)))
print('MSE: {}'.format(metrics.mean_squared_error(Y_test, y_pred)))
print('RMSE: {}'.format(np.sqrt(metrics.mean_squared_error(Y_test, y_pred))))

  
